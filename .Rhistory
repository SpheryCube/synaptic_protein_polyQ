geom_histogram(alpha=0.5, position="identity") +
geom_vline(data=mu, aes(xintercept= HMMhasPolyAA.mean, color = HMMhasPolyAA),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA, " (Whole Protein Seqs)")) +
ylab("# Proteins") +
labs(fill = paste0("Contains \n poly", candidate_AA)) +
ggtitle(paste0("%", candidate_AA," Whole Proteins Histogram")) +
theme_light()+
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
guides(color = FALSE)
print(p)
p <- ggplot(data = df, aes(x = df$AAComp)) +
geom_histogram(show.legend = FALSE, alpha = 0.5,
fill = brewer.pal(11, "RdYlGn")[11],
color = brewer.pal(11, "RdYlGn")[11]) +
geom_vline(aes(xintercept=mean(AAComp)), linetype="dashed", size=1) +
xlab(paste0("%", candidate_AA, " (Random 50AA Seqs)")) +
ylab("# of Randomly Choosen Pepitides") +
ggtitle(paste0("%", candidate_AA, " for 100000 50AA Random Seqs Histogram")) +
theme_light()
print(p)
p <- ggplot(data = df, aes(x = df$AAComp)) +
geom_histogram(show.legend = FALSE, alpha = 0.5,
fill = brewer.pal(11, "RdYlGn")[11],
color = brewer.pal(11, "RdYlGn")[11]) +
geom_vline(aes(xintercept=mean(AAComp)), linetype="dashed", size=1, color = brewer.pal(11, "RdYlGn")[11]) +
xlab(paste0("%", candidate_AA, " (Random 50AA Seqs)")) +
ylab("# of Randomly Choosen Pepitides") +
ggtitle(paste0("%", candidate_AA, " for 100000 50AA Random Seqs Histogram")) +
theme_light()
print(p)
p <- ggplot(data = proteins, aes(x = proteins$AAComp)) +
geom_histogram(alpha=0.5, color = brewer.pal(11,"RdYlGn")[11],
fill = brewer.pal(11,"RdYlGn")[11]) +
geom_vline(aes(xintercept=mean(AAComp)),
color=brewer.pal(11, "RdYlGn")[11], linetype="dashed", size=1) +
xlab(paste0("%", candidate_AA, " (Whole Protein Seqs)")) +
ylab("# Proteins") +
ggtitle(paste0("%", candidate_AA, " Whole Protein")) +
theme_light()
print(p)
library(dplyr)
mu <- proteins %>% group_by(HMMhasPolyAA) %>%
summarise(HMMhasPolyAA.mean = mean(AAComp))
# Plot type: Whole Protein AAC Histogram split by HMMhasPolyAA
p <- ggplot(data = proteins, aes(x = AAComp, fill = HMMhasPolyAA, color = HMMhasPolyAA)) +
geom_histogram(alpha=0.5, position="identity") +
geom_vline(data=mu, aes(xintercept= HMMhasPolyAA.mean, color = HMMhasPolyAA),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA, " (Whole Protein Seqs)")) +
ylab("# Proteins") +
labs(fill = paste0("Contains \n poly", candidate_AA)) +
ggtitle(paste0("%", candidate_AA," Whole Proteins Histogram")) +
theme_light()+
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
guides(color = FALSE)
print(p)
p <- ggplot(data = proteins, aes(x = AAComp, fill = HMMhasPolyAA)) +
geom_density(alpha = 0.5) +
xlab(paste0("%", candidate_AA, " (Whole Protein Seqs)")) +
ylab("Density") +
labs(fill = paste0("Contains \n poly", candidate_AA)) +
ggtitle(paste0("%", candidate_AA, " Whole Proteins Density Plot")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
########################################################
# Plot type: 100000 50AA chunks, each randomly chosen from randomly chosen Protein seqs
df <- sample_n(proteins, 100000, replace = TRUE)
df$RandomSeqs <-unlist(lapply(as.character(df$peptide_seq), rnd_substr, 50))
nAAs = str_count(df$RandomSeqs, candidate_AA)
df$AAComp <- nAAs/nchar(df$RandomSeqs)
p <- ggplot(data = df, aes(x = df$AAComp)) +
geom_histogram(show.legend = FALSE, alpha = 0.5,
fill = brewer.pal(11, "RdYlGn")[11],
color = brewer.pal(11, "RdYlGn")[11]) +
geom_vline(aes(xintercept=mean(AAComp)), linetype="dashed", size=1, color = brewer.pal(11, "RdYlGn")[11]) +
xlab(paste0("%", candidate_AA, " (Random 50AA Seqs)")) +
ylab("# of Randomly Choosen Pepitides") +
ggtitle(paste0("%", candidate_AA, " for 100000 50AA Random Seqs Histogram")) +
theme_light()
print(p)
filtered_df <- df %>% filter(df$AAComp > quantile(df$AAComp, 0.95))
filtered_df <- filtered_df %>% arrange(desc(filtered_df$AAComp))
write.csv(filtered_df, file = paste0(output_dir, species, "_", candidate_AA, "fraction_randomSeqs_95sig.csv"))
p <- ggplot(data = df, aes(x = as.numeric(df$AvgPolyAARegionAAFractions))) +
geom_histogram(show.legend = FALSE) +
xlab(paste0("Avg %", candidate_AA, " of poly", candidate_AA, " Regions")) +
ggtitle(paste0("Avg %", candidate_AA, " of poly", candidate_AA," Regions for poly", candidate_AA, " Containing Proteins")) +
ylab(paste0("# Proteins Containing poly", candidate_AA)) +
theme_light()
print(p)
p <- ggplot(data = df, aes(x = as.numeric(df$AvgPolyAARegionAAFractions))) +
geom_histogram(show.legend = FALSE) +
xlab(paste0("Avg %", candidate_AA, " of poly", candidate_AA, " Regions")) +
ggtitle(paste0("Avg %", candidate_AA, " of poly", candidate_AA," Regions for poly", candidate_AA, " Containing Proteins")) +
ylab(paste0("# Proteins Containing poly", candidate_AA)) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
p <- ggplot(data = df, aes(x = as.numeric(df$AvgPolyAARegionAAFractions))) +
geom_histogram(show.legend = FALSE, alpha = 0.5,
fill = brewer.pal(11, "RdYlGn")[11],
color = brewer.pal(11, "RdYlGn")[11]) +
geom_vline(aes(xintercept=mean(AAComp)), linetype="dashed", size=1, color = brewer.pal(11, "RdYlGn")[11]) +
xlab(paste0("Avg %", candidate_AA, " of poly", candidate_AA, " Regions")) +
ggtitle(paste0("Avg %", candidate_AA, " of poly", candidate_AA," Regions for poly", candidate_AA, " Containing Proteins")) +
ylab(paste0("# Proteins Containing poly", candidate_AA)) +
theme_light()
print(p)
p <- ggplot(data = df, aes(x = as.numeric(df$AvgPolyAARegionAAFractions))) +
geom_histogram(show.legend = FALSE, alpha = 0.5,
fill = brewer.pal(11, "RdYlGn")[11],
color = brewer.pal(11, "RdYlGn")[11]) +
geom_vline(aes(xintercept=mean(AvgPolyAARegionAAFractions)), linetype="dashed", size=1, color = brewer.pal(11, "RdYlGn")[11]) +
xlab(paste0("Avg %", candidate_AA, " of poly", candidate_AA, " Regions")) +
ggtitle(paste0("Avg %", candidate_AA, " of poly", candidate_AA," Regions for poly", candidate_AA, " Containing Proteins")) +
ylab(paste0("# Proteins Containing poly", candidate_AA)) +
theme_light()
print(p)
mean(AvgPolyAARegionAAFractions)
mean(df$AvgPolyAARegionAAFractions)
df$AvgPolyAARegionAAFractions
mean(df$AvgPolyAARegionAAFractions)
p <- ggplot(data = df, aes(x = as.numeric(df$AvgPolyAARegionAAFractions))) +
geom_histogram(show.legend = FALSE, alpha = 0.5,
fill = brewer.pal(11, "RdYlGn")[11],
color = brewer.pal(11, "RdYlGn")[11]) +
geom_vline(aes(xintercept=mean(AvgPolyAARegionAAFractions, na.rm = TRUE)), linetype="dashed", size=1, color = brewer.pal(11, "RdYlGn")[11]) +
xlab(paste0("Avg %", candidate_AA, " of poly", candidate_AA, " Regions")) +
ggtitle(paste0("Avg %", candidate_AA, " of poly", candidate_AA," Regions for poly", candidate_AA, " Containing Proteins")) +
ylab(paste0("# Proteins Containing poly", candidate_AA)) +
theme_light()
print(p)
df <- proteins %>% filter(HMMhasPolyAA)
p <- ggplot(data = df, aes(x = df$MaxPolyAARegionAAFractions, fill = "")) +
geom_histogram(show.legend = FALSE) +
xlab(paste0("Max %", candidate_AA, " of poly", candidate_AA, " Regions")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins")) +
ylab(paste0("# Proteins Containing poly", candidate_AA)) +
theme_light()
print(p)
df <- proteins %>% filter(HMMhasPolyAA)
p <- ggplot(data = df, aes(x = df$MaxPolyAARegionAAFractions, fill = "")) +
geom_histogram(show.legend = FALSE, alpha = 0.5,
fill = brewer.pal(11, "RdYlGn")[11],
color = brewer.pal(11, "RdYlGn")[11]) +
geom_vline(aes(xintercept=mean(AvgPolyAARegionAAFractions, na.rm = TRUE)), linetype="dashed", size=1, color = brewer.pal(11, "RdYlGn")[11]) +              xlab(paste0("Max %", candidate_AA, " of poly", candidate_AA, " Regions")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins")) +
ylab(paste0("# Proteins Containing poly", candidate_AA)) +
theme_light()
print(p)
# Now compare to randomly chosen sequences of the same size
polyAA_df <- proteins %>% filter(HMMhasPolyAA)
random_seq_df <- data.frame(matrix(nrow = nrow(polyAA_df), ncol = 1))
colnames(random_seq_df) <- c("AAComp")
for (i in 1:nrow(polyAA_df)) {
target_length <- polyAA_df[i,]$MaxLengthsPolyAA
flag = TRUE
while (flag){
try = as.character(sample_n(proteins, 1)$peptide_seq)
if (nchar(try) > target_length) {
res <- rnd_substr(try, target_length)
nAAs = str_count(res, candidate_AA)
random_seq_df$AAComp[i] <- nAAs/nchar(res)
flag = FALSE
}
}
}
p <- ggplot() +
geom_histogram(data = polyAA_df, aes(x = polyAA_df$MaxPolyAARegionAAFractions, fill = "Red")) +
geom_histogram(data = random_seq_df, aes(x= random_seq_df$AAComp, fill = "Blue")) +
xlab(paste0("%", candidate_AA)) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n
vs %Q of randomly chosen tracts")) +
ylab(paste0("# Proteins", candidate_AA)) +
theme_light()
print(p)
p <- ggplot() +
geom_histogram(data = polyAA_df, aes(x = polyAA_df$AvgPolyAARegionAAFractions, fill = "Red")) +
geom_histogram(data = random_seq_df, aes(x= random_seq_df$AAComp, fill = "Blue")) +
xlab(paste0("%", candidate_AA)) +
ggtitle(paste0("Avg %", candidate_AA, " of poly", candidate_AA," Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts")) +
ylab(paste0("# Proteins", candidate_AA)) +
theme_light()
print(p)
p <- ggplot() +
geom_histogram(data = polyAA_df, aes(x = polyAA_df$MaxPolyAARegionAAFractions, fill = "Red")) +
geom_histogram(data = random_seq_df, aes(x= random_seq_df$AAComp, fill = "Blue")) +
xlab(paste0("%", candidate_AA)) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n
vs %Q of randomly chosen tracts")) +
ylab(paste0("# Proteins", candidate_AA)) +
theme_light()
print(p)
View(MaxPolyAARegionAAFractions)
View(MaxPolyAARegionAAFractions)
p <- ggplot() +
geom_histogram(data = polyAA_df, aes(x = polyAA_df$MaxPolyAARegionAAFractions, fill = "Red")) +
geom_histogram(data = random_seq_df, aes(x= random_seq_df$AAComp, fill = "Blue")) +
xlab(paste0("%", candidate_AA)) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts")) +
ylab(paste0("# Proteins", candidate_AA)) +
theme_light()
print(p)
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= random_seq_df$AAComp)
df <- melt(df,
id.vars = c("random_AAComp", "Max_AAComp"),
variable.name = "seqType",
value.name = "AAComp")
View(df)
melt(df,
id.vars = c("random_AAComp", "Max_AAComp"),
variable.name = "seqType",
value.name = "AAComp")
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= random_seq_df$AAComp)
df
melt(df,
id.vars = c("random_AAComp", "Max_AAComp"),
variable.name = "seqType",
value.name = "AAComp")
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= random_seq_df$AAComp)
df
df <- melt(df,
id.vars = "seqType",
variable.name =  c("random_AAComp", "Max_AAComp"),
value.name = "AAComp")
df <- melt(df,
variable.name =  c("random_AAComp", "Max_AAComp"),
value.name = "AAComp")
df <- melt(df)
View(df)
?melt
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= random_seq_df$AAComp)
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= random_seq_df$AAComp)
df <- melt(df)
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= random_seq_df$AAComp)
df <- melt(df)
View(df)
p <- ggplot() +
geom_histogram(data = df, aes(x = value, fill = variable)) +
xlab(paste0("%", candidate_AA)) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts")) +
ylab(paste0("# Proteins", candidate_AA)) +
theme_light()
print(p)
p <- ggplot() +
geom_histogram(data = df, aes(x = value, fill = variable)) +
xlab(paste0("%", candidate_AA)) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts")) +
ylab(paste0("# Proteins")) +
theme_light()
print(p)
p <- ggplot() +
geom_histogram(data = df, aes(x = value, fill = variable)) +
xlab(paste0("%", candidate_AA)) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
ylab(paste0("# Proteins")) +
theme_light()
print(p)
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= proteins$MaxPolyAARegionAAFractions)
df <- melt(df)
# Now compare to randomly chosen sequences of the same size
polyAA_df <- proteins %>% filter(HMMhasPolyAA)
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= polyAA_df$MaxPolyAARegionAAFractions)
df <- melt(df)
p <- ggplot() +
geom_histogram(data = df, aes(x = value, fill = variable)) +
xlab(paste0("%", candidate_AA)) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
ylab(paste0("# Proteins")) +
theme_light()
print(p)
p <- ggplot() +
geom_histogram(data = df, aes(x = value, fill = variable), alpha = 0.5) +
xlab(paste0("%", candidate_AA)) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
ylab(paste0("# Proteins")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
View(df)
mu <- df %>% group_by(df$variable) %>% summarise(AAComp.mean = mean(AAComp))
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= polyAA_df$MaxPolyAARegionAAFractions)
df <- melt(df)
colnames(df) <- c("seqType", "AAComp")
mu <- df %>% group_by(df$variable) %>% summarise(AAComp.mean = mean(AAComp))
colnames(df)
mu <- df %>% group_by(df$variable) %>% summarise(AAComp.mean = mean(AAComp))
mu <- df %>% group_by(df$seqType) %>% summarise(AAComp.mean = mean(AAComp))
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = HMMhasPolyAA),
linetype='dashed', size=1, show.legend = FALSE)
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = HMMhasPolyAA),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
mu
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
mu$`df$seqType`
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= polyAA_df$MaxPolyAARegionAAFractions)
df <- melt(df)
colnames(df) <- c("seqType", "AAComp")
mu <- df %>% group_by(df$seqType) %>% summarise(AAComp.mean = mean(AAComp))
mu
colnames(df)
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= polyAA_df$MaxPolyAARegionAAFractions)
df <- melt(df)
colnames(df) <- c("seqType", "AAComp")
mu <- df %>% group_by(df$seqType) %>% summarise(AAComp.mean = mean(AAComp))
colnames(mu) <- c("seqType", "AAComp.mean")
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
df
View(df)
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
p <- ggplot(data = df, aes(x = AAComp, fill = seqType, color = seqType)) +
geom_histogram(data = df, alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
print(p)
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
View(df)
View(df)
df <- df %>% filter(df$seqType == "Max_AAComp")
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
df <- df %>% filter(df$seqType == "random_AAComp")
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= polyAA_df$MaxPolyAARegionAAFractions)
df <- melt(df)
colnames(df) <- c("seqType", "AAComp")
mu <- df %>% group_by(df$seqType) %>% summarise(AAComp.mean = mean(AAComp))
colnames(mu) <- c("seqType", "AAComp.mean")
df <- df %>% filter(df$seqType == "random_AAComp")
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType, color = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, color = seqType, fill = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, color = seqType, fill = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 1))])  +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 1))])  +
theme_light()
print(p)
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= polyAA_df$MaxPolyAARegionAAFractions)
colnames(df) <- c("seqType", "AAComp")
df <- melt(df)
mu <- df %>% group_by(df$seqType) %>% summarise(AAComp.mean = mean(AAComp))
colnames(mu) <- c("seqType", "AAComp.mean")
# df <- df %>% filter(df$seqType == "random_AAComp")
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, color = seqType, fill = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
df <- data.frame(random_AAComp= random_seq_df$AAComp, Max_AAComp= polyAA_df$MaxPolyAARegionAAFractions)
df <- melt(df)
colnames(df) <- c("seqType", "AAComp")
mu <- df %>% group_by(df$seqType) %>% summarise(AAComp.mean = mean(AAComp))
colnames(mu) <- c("seqType", "AAComp.mean")
# df <- df %>% filter(df$seqType == "random_AAComp")
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, color = seqType, fill = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
# df <- df %>% filter(df$seqType == "random_AAComp")
p <- ggplot() +
geom_histogram(data = df, aes(x = AAComp, fill = seqType), alpha = 0.5) +
geom_vline(data=mu, aes(xintercept= AAComp.mean, color = seqType),
linetype='dashed', size=1, show.legend = FALSE) +
xlab(paste0("%", candidate_AA)) +
ylab(paste0("# Proteins")) +
ggtitle(paste0("Max %", candidate_AA, " of Poly", candidate_AA, " Regions for poly", candidate_AA, " Containing Proteins \n vs %Q of randomly chosen tracts of similiar size")) +
scale_fill_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
scale_colour_manual(values = brewer.pal(11,"RdYlGn")[round(seq(from = 1, to = 11,length.out = 2))])  +
theme_light()
print(p)
